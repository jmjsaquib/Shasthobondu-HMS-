@{
    ViewBag.Title = "Appoinment";
}

<div class="row">

    <div class="panel panel-success">

        <div class="panel-heading">
            <h3>Appoinment Information Form</h3>

        </div>

        <div class="panel-body">
            <div class="printing_section" id="printing_section" align="right">
                <span style="float: right; background: #8b0000 ; border-color: #000000; color: #008000;" class="btn btn-xs btn-info" id="print_ref">
                    <i class="fa fa-print"></i>
                    <a href="javascript:void(0);" class="button" id="print_click">Print</a>
                </span>
            </div>

            <fieldset>
                <legend>Patient Information</legend>
                <hr class="legend-hr" />
            </fieldset>
            <div class="col-md-12">
                <div class="col-md-2">
                    <label for="full_name">Patient ID</label>
                </div>
                <div class="col-md-2">
                    <input type="text" class="k-textbox" name="pateintId" id="pateintId" style="width: 100%;" readonly="readonly">
                </div>
                <div class="col-md-2">
                    <label for="full_name">Patient Name</label>
                </div>
                <div class="col-md-2">
                    <input type="text" class="k-textbox" name="full_name" id="full_name" style="width: 100%;" readonly="readonly">
                </div>
                <div class="col-md-2">
                    <label for="dob">Date of Birth</label>
                </div>
                <div class="col-md-2">
                    <input type="text" class="k-textbox" name="dob" id="dob" style="width: 100%;" readonly="readonly">
                </div>
            </div>
            <div class="clearfix"></div>
            <br />
            <div class="col-md-12">
                <div class="col-md-2">
                    <label for="patientAddress">Patient Address</label>
                </div>
                <div class="col-md-2">
                    <input type="text" class="k-textbox" name="patientAddress" id="patientAddress" style="width: 100%;" readonly="readonly">
                </div>
                <div class="col-md-2">
                    <label for="blood_group">Blood Group</label>
                </div>
                <div class="col-md-2">
                    <input type="text" class="k-textbox" name="blood_group" id="blood_group" style="width: 100%;" readonly="readonly">
                </div>
                <div class="col-md-2">
                    <label for="blood_pressure">Blood Pressure</label>
                </div>
                <div class="col-md-2">
                    <input type="text" class="k-textbox" name="blood_pressure" id="blood_pressure" style="width: 100%;" readonly="readonly">
                </div>

            </div>
            <div class="clearfix"></div>
            <br />

            <fieldset>
                <legend>Appoinment Information</legend>
                <hr class="legend-hr" />
            </fieldset>
            <form id="Appoinemtninfo">
                <input type="hidden" id="patient_id" name="patient_id" value="@ViewBag.patientId" />

                <div class="col-md-12">
                    <div class="col-md-2">
                        <label for="department_id">Department</label>
                    </div>
                    <div class="col-md-3">
                        <input type="text" name="department_id" id="department_id" style="width: 100%;">
                    </div>
                    <div class="col-md-2">
                        <label for="doctor_id">Doctor Name</label>
                    </div>
                    <div class="col-md-3">
                        <input type="text" name="doctor_id" id="doctor_id" style="width: 100%;">
                    </div>

                </div>
                <div class="clearfix"></div>
                <br />
                <div class="col-md-12">
                    <div class="col-md-2">
                        <label for="appoinment_date">Appoinment Date</label>
                    </div>
                    <div class="col-md-3">
                        <input type="text" name="appoinment_date" id="appoinment_date" style="width: 100%;">
                    </div>
                    <div class="col-md-2">
                        <label for="appoinment_time">Appoinment Time</label>
                    </div>
                    <div class="col-md-3">
                        <input type="text" name="appoinment_time" id="appoinment_time" style="width: 100%;">
                    </div>
                </div>
                <div class="clearfix"></div>
                <br />
                <div class="col-md-12">
                    <div class="col-md-2">
                        <label for="appoinment_serial">Appoinment Serial</label>
                    </div>
                    <div class="col-md-3">
                        <input type="text" class="" name="appoinment_serial" id="appoinment_serial" style="width: 100%;">
                    </div>
                    <div class="col-md-2">
                        <label for="appoinment_type">Appoinment Type(Urgency)</label>
                    </div>
                    <div class="col-md-3">
                        <label class="radio-inline"><input type="radio" class="" name="appoinment_type" value="normal" style="width: 50%;" autocomplete="off" checked="checked">Normal</label>
                        <label class="radio-inline"><input type="radio" class="" name="appoinment_type" value="priority" style="width: 50%;" autocomplete="off">Priority</label>
                        <label class="radio-inline"><input type="radio" class="" name="appoinment_type" value="urgent" style="width: 50%;" autocomplete="off">Urgent</label>
                    </div>

                </div>
                <div class="clearfix"></div>
                <br />
                <div class="col-md-12">
                    <div class="col-md-2">
                        <label for="doctor_fees">Doctor Fee</label>
                    </div>
                    <div class="col-md-3">
                        <input type="text" class="k-textbox" name="doctor_fees" id="doctor_fees" style="width: 100%;">
                    </div>

                    <div class="col-md-2">
                        <label for="purpose">Purpose</label>
                    </div>
                    <div class="col-md-3">
                        <input type="text" class="k-textbox" name="purpose" id="purpose" style="width: 100%;">
                    </div>

                </div>
                <div class="clearfix"></div>
                <br />
                <div class="col-md-12">
                    <div class="col-md-2">
                        <label for="patient_type">First Time Visit</label>
                    </div>
                    <div class="col-md-3">
                        <input type="radio" class="" name="patient_type" value="new" style="width: 50%;" autocomplete="off" checked="checked">Yes<br/>
                        <input type="radio" class="" name="patient_type" value="old" style="width: 50%;" autocomplete="off">No<br/>
                    </div>
                    <div class="col-md-2">
                        <label for="appoinment_id">Appoinment ID</label>
                    </div>
                    <div class="col-md-3">
                        <input type="text" class="k-textbox" name="appoinment_id" id="appoinment_id" style="width: 100%;" readonly="readonly">
                    </div>
                </div>
                <input type="hidden" id="submittedDate" name="submittedDate"/>
            </form>

            <div class="row">
                <hr />
                <div class="clearfix"></div>
                <br />
                <div class="col-md-12" id="submitbtn">
                    <input type="button" class="k-button" id="btnSubmit" value="Save Information" />
                </div>
            </div>
        </div>
    </div>
</div>
<script type="text/javascript">
    var patientId = '@ViewBag.patientId';
    var status = "appoinment";
    var serialDatasource = [];
    var finalDatasource = [];
    var tempTimeDatasource = [];
    var finalTimeDatasource = [];
    var appoinmentId = 0;
    $("#print_click").click(function () {
        var printingHtml = $("#printing_section");
        printingHtml.html('');
        //$("#printing_section").hide();
        $("#submitbtn").hide();
        var url='@Url.Action("GetAppoinmentInvoice", "Appoinment")?appoinmentId='+ appoinmentId;
        window.open(url, '_blank');
        redirect();
    });

    function redirect() {
        window.location.href = '@Url.Action("Index", "Patient")';
    }
    $(function () {
        ClearData();
        $("#printing_section").hide();
        $.ajax({
            type: "GET",
            url: "@UrlConfig.Action("GetPatientById", "Patient")",
            data: {
                patientId: patientId
            },
            dataType: "json",
            success: function (data) {
                console.log(data);
                $("#full_name").val(data.full_name);
                $("#pateintId").val(data.patient_id);
                $("#patientAddress").val(data.address);
                $("#dob").val(data.dob);
                $("#blood_group").val(data.blood_group);
                $("#blood_pressure").val(data.blood_pressure);
                loadSerial(null);
                loadTime(null);
            }

        });
        ImportAllComboBox();
        var appoinementDate = $("#appoinment_date").data("kendoDatePicker");
        //var appoinementTime = $("#appoinment_time").data("kendoTimePicker");
        appoinementDate.enable(false);
       // appoinementTime.enable(false);
    });
    function ImportAllComboBox() {
        $("#department_id").kendoComboBox({
            placeholder: "-- Select --",
            dataTextField: "department_name",
            dataValueField: "department_id",
            dataSource: {
                transport: {
                    read: {
                        url: "@UrlConfig.Action("GetAllDepartment", "Department")",
                        type: "GET"
                    }
                }
            }
        }).data("kendoComboBox");
        $("#doctor_id").kendoComboBox({
            placeholder: "-- Select --",
            cascadeFrom: "department_id",
            dataTextField: "employee_name",
            dataValueField: "doctor_id",
            dataSource: {
                transport: {
                    read: {
                        url: "@UrlConfig.Action("GetAllEmployeeDoctor", "Utility")",
                        type: "GET",
                        data: {
                            empStatus:status
                        }
                    }
                }
            }
        }).data("kendoComboBox");

        $("#appoinment_date").kendoDatePicker({
            animation: {
                close: {
                    effects: "fadeOut zoom:out",
                    duration: 300
                },
                open: {
                    effects: "fadeIn zoom:in",
                    duration: 300
                }
            }
            
        });
        
    }

    $("#department_id").change(function () {
        ClearDataDep();
        serialDatasource = [];
        loadSerial(null);
        loadTime(null);
        console.log($("#department_id").val());
        var appoinementDate = $("#appoinment_date").data("kendoDatePicker");
        //var appoinementTime = $("#appoinment_time").data("kendoTimePicker");
        $("#appoinment_date").val("");
        //$("#appoinment_time").val("");
        $("#appoinment_serial").data("kendoComboBox").value("");
        appoinementDate.enable(false);
       // appoinementTime.enable(false);

    });
    function createDateForSqlQuery(requireDate) {
        var currentDate = new Date(requireDate);
        var month = currentDate.getDate();
        console.log(month);
        var day = currentDate.getMonth() + 1;
        console.log(day);
        var year = currentDate.getFullYear();
        console.log(year);
        // var date = (month + "/" + day + "/" + year);
        var date = (year + "/" + day + "/" + month);
        //var date = (day + "/" + month + "/" + year);
        console.log(date);
        return date;
    }
    function createDate() {
        var currentDate = new Date();
        var day = currentDate.getDate();

        var month = currentDate.getMonth() + 1;

        var year = currentDate.getFullYear();

       // var date = (month + "/" + day + "/" + year);
        var date = (year + "/" + month + "/" + day);
        //var date = (day + "/" + month + "/" + year);
        console.log(date);
        return date;
    }
    function FormattedDateForPost(formatDate) {
        var currentDate = new Date(formatDate);
        var day = currentDate.getDate();
        var month = currentDate.getMonth() + 1;
        if (month < 10) {
            month = "0" + month;
        }

        var year = currentDate.getFullYear();

        // var date = (month + "/" + day + "/" + year);
        var date = (year + "/" + month + "/" + day);
        //var date = (day + "/" + month + "/" + year);
        console.log(date);
        return date;
    }
    function ForDatePicker(pickerDate) {
        var currentDate = new Date(pickerDate);
        var day = currentDate.getDate();
        var month = currentDate.getMonth() + 1;
        if (month < 10) {
            month = "0" + month;
        }
        var year = currentDate.getFullYear();

         var date = (month + "/" + day + "/" + year);
        //var date = (year + "/" + month + "/" + day);
        //var date = (day + "/" + month + "/" + year);
        console.log(date);
        return date;
    }
    var tempDoctorId = 0;
    var totalCount = 0;
    var minTime = "";
    var maxTime = "";
    $("#doctor_id").change(function () {
        tempDoctorId = $(this).val();
         totalCount = 0;
        var minDate = "";
        
        var today = new Date();
        serialDatasource = [];
        loadSerial(null);
        $("#doctor_fees").val("");
        
        var appoinementDate = $("#appoinment_date").data("kendoDatePicker");
        $("#appoinment_date").val("");
        appoinementDate.enable(false);
        var currentDate = createDate();

        $.ajax({
            type: "GET",
            url: "@UrlConfig.Action("GetDoctorById", "Doctor")",
            data: {
                doctorId: tempDoctorId
            },
            dataType: "json",
            success: function (e) {
                console.log(e);

                totalCount = e.doctor_appoinment_count;
                minTime = e.doctor_available_time_from;
                maxTime = e.doctor_available_time_to;
                console.log(minTime, "To", maxTime);
                $("#doctor_fees").val(e.doctor_fees+" Taka only");
                $.ajax({
                    type: "GET",
                    url: "@UrlConfig.Action("AppoinmentValiadationForDoctor", "Appoinment")",
                    data: {
                        doctorId: tempDoctorId,
                        today: currentDate
                    },
                    dataType: "json",
                    success: function(ee) {
                        console.log(ee.length);
                        $.each(ee, function(key,checkValue) {
                            if (checkValue != null) {

                                console.log(checkValue);
                                $.each(ee, function(kye2, obj) {
                                    var dataSpilt = obj.appoinment_date.split(' ');
                                    console.log(dataSpilt);
                                    var minDateForCalender = dataSpilt[0].trim();
                                    var validationCount = obj.count;
                                    console.log(validationCount);
                                    if (validationCount != totalCount) {
                                        minDate = minDateForCalender;
                                        console.log(minDateForCalender);
                                        return false;
                                    }
                                });

                                console.log("Min date", minDate);
                                var testDate = "";
                                testDate = minDate;
                                var appoinementDate2 = $("#appoinment_date").data("kendoDatePicker");
                                appoinementDate2.enable(true);
                                appoinementDate2.min(testDate);
                                appoinementDate2.max(new Date(today.setDate(today.getDate() + 30)));
                                var appoinementDate23 = $("#appoinment_date").data("kendoDatePicker");
                                console.log("Data date", appoinementDate23);

                            } else {
                                console.log(checkValue);
                                var appoinementDate3 = $("#appoinment_date").data("kendoDatePicker");

                                appoinementDate3.enable(true);
                                appoinementDate3.min(new Date());
                                appoinementDate3.max(new Date(today.setDate(today.getDate() + 30)));
                            }
                            return false;
                        });

                        //ok


                    }
                });
            }
        });
    });
    function ClearData() {
        $("#appoinment_date").val("");
        $("#appoinment_time").val("");
        $("#department_id").val("");
        $("#doctor_id").val("");
        $("#appoinment_serial").val("");
        $("#purpose").val("");
        $("#doctor_fees").val("");
    }
    function ClearDataDep() {
        $("#appoinment_date").val("");
        $("#appoinment_time").val("");
        $("#doctor_id").val("");
        $("#appoinment_serial").val("");
        $("#purpose").val("");
        $("#doctor_fees").val("");
    }
    $("#appoinment_date").change(function () {
        serialDatasource = [];
        finalDatasource = [];
        tempTimeDatasource = [];
        finalTimeDatasource = [];

        loadSerial(null);
        var requireDate = $("#appoinment_date").val();
        //value = $(this).val();
        console.log("value", requireDate);
        var expectedDate = createDateForSqlQuery(requireDate);
        $("#submittedDate").val(FormattedDateForPost(requireDate));
        console.log(expectedDate);

        //appoinment time converts in int
        var tempMinTime = minTime.split(":");
        var tempMaxTime = maxTime.split(":");
        console.log(tempMinTime[0], "to", tempMaxTime[0]);
        var minHour = 0;
        var maxHour = 0;
        minHour = parseInt(tempMinTime[0]);
        maxHour = parseInt(tempMaxTime[0]);
        var tempminMinute = tempMinTime[1].split(" ");
        var tempmaxMinute = tempMaxTime[1].split(" ");
        var tempMinAm = tempminMinute[1];
        var tempMaxAm = tempmaxMinute[1];
        
        if (minHour > maxHour) {
            maxHour = Math.abs(maxHour + 12);
        }
        if (tempMinAm == "PM" && tempMaxAm =="PM" ) {
            minHour = Math.abs(minHour + 12);
            maxHour = Math.abs(maxHour + 12);
        }
        console.log(tempMinAm, "to", tempMaxAm);



        $.ajax({
            type: "GET",
            url: "@UrlConfig.Action("AppoinmentListForDoctor", "Appoinment")",
            data: {
                doctorId: tempDoctorId,
                expectedDate: expectedDate
            },
            dataType: "json",
            success: function(ee) {
                console.log(ee);
                for (var j = minHour; j <= maxHour; j++) {
                    for (var m = 0; m < 60; m = m + 15) {
                        if (m == 0) {
                            var time1 = { appoinment_time: j + " : " + m + "0", appoinment_time_value: j + " : " + m + "0" };
                            tempTimeDatasource.push(time1);
                        } else {
                            var time2 = { appoinment_time: j + " : " + m, appoinment_time_value: j + " : " + m };
                            tempTimeDatasource.push(time2);
                        }

                    }

                }
                $.each(ee, function(key,checkValue) {
                    if (checkValue != null) {
                        console.log(tempTimeDatasource);
                        for (var i = 1; i <= totalCount; i++) {
                            var serial = { appoinment_serial: i, appoinment_serial_value: i };
                            serialDatasource.push(serial);
                        }
                        
                       
                        for (var item in ee) {
                            //alert(ee[item].bed_id);
                            for (var obj in serialDatasource) {
                                if (serialDatasource[obj].appoinment_serial == ee[item].appoinment_serial) {
                                    delete serialDatasource[obj];
                                }
                            }
                            for (var obj3 in tempTimeDatasource) {
                                if (tempTimeDatasource[obj3].appoinment_time == ee[item].appoinment_time) {
                                    delete tempTimeDatasource[obj3];
                                }
                            }

                        }
                       
                        var result = JSON.parse(JSON.stringify(serialDatasource));
                        var resultTime = JSON.parse(JSON.stringify(tempTimeDatasource));
                        
                        var count = 0;
                        //alert(length);
                        for (var item2 in result) {
                            if (result[item2] == null) {
                                count++;

                            } else {
                                finalDatasource.push(result[item2]);
                            }
                            if (count == totalCount) {
                                swal("Alert !!!", "Date is full...", "warning");
                                finalDatasource = [];
                                loadSerial(finalDatasource);
                                return false;
                            }
                        }
                        for (var item4 in resultTime) {
                            if (result[item4] != null) {
                                finalTimeDatasource.push(resultTime[item4]);

                            }
                            
                        }
                        console.log(count);
                        loadSerial(finalDatasource);
                        loadTime(finalTimeDatasource);
                    } else {
                        for (var i = 1; i <= totalCount; i++) {
                            var data = { appoinment_serial: i, appoinment_serial_value: i };
                            serialDatasource.push(data);
                        }
                        
                        loadSerial(serialDatasource);
                        loadTime(tempTimeDatasource);

                        return false;
                    }
                    
                    return false;
                });


            }
        });
    });
    function loadSerial(ds) {
        // alert("click");
        $("#appoinment_serial").kendoComboBox({
            placeholder: "-- Select --",
            dataTextField: "appoinment_serial_value",
            dataValueField: "appoinment_serial",
            dataSource: ds
        }).data("kendoComboBox");
    }
    function loadTime(ds) {
       // alert("click");
        $("#appoinment_time").kendoComboBox({
            placeholder: "-- Select --",
            dataTextField: "appoinment_time_value",
            dataValueField: "appoinment_time",
            dataSource: ds
        }).data("kendoComboBox");
    }


    $("#btnSubmit").click(function () {
        
        var fromData = $("#Appoinemtninfo").serializeArray();
        var appo = {};
        $.each(fromData, function (item, obj) {
            appo[obj.name] = obj.value;
        });
        console.log(appo);
        //return false;
        $.ajax({
            type: "POST",
            url: "@UrlConfig.Action("Post","Appoinment")",
            data: appo,
            dataType: "json",
            success: function (data) {
                console.log(data);

                var id = data.returnValue;
                console.log("Returnc \value", id);
                if (data.output == "success") {
                    swal({
                        title: "success",
                        text: data.msg,
                        type: "success",
                        showCancelButton: false
                    }, function () {
                        //window.location.href = '@Url.Action("Index", "Patient")';
                        $("#appoinment_id").val(data.returnvalue.appoinment_id);
                        appoinmentId = data.returnvalue.appoinment_id;
                        $("#submitbtn").hide();
                        $("#printing_section").show();
                    });
                    return false;
                } else {
                    swal("Alert !!!", data.msg, "warning");
                }
            }

        });
    });
</script>
